(rule $Other (other) (ConstantFn tt:root.special.other tt:type.special))

(rule $RecordType ($PHRASE) (SimpleLexiconFn (type tt:type.recordtype)))
(rule $RecordType (my $RecordType) (SelectFn 0))
(rule $RecordType (my last $RecordType) (SelectFn 0))

(rule $InsertSomething (insert $RecordType) (lambda x (tt:root.command.insert (var x))))
(rule $InsertSomething (insert $RecordType record) (lambda x (tt:root.command.insert (var x))))
(rule $InsertSomething (insert record) (ConstantFn (tt:root.command.insert tt:recordtype.generic) tt:type.root.command))

(rule $InsertValueOp (is) (ConstantFn (lambda x (lambda y ((tt:root.command.insertimmediate (var x)) (var y)))) (-> tt:type.recordtype (-> fb:type.any tt:type.root.command))))
(rule $InsertValueOp (are) (ConstantFn (lambda x (lambda y ((tt:root.command.insertimmediate (var x)) (var y)))) (-> tt:type.recordtype (-> fb:type.any tt:type.root.command))))
(rule $InsertValueLeft ($RecordType $InsertValueOp) (JoinFn betaReduce backward))
(rule $InsertValue ($InsertValueLeft $StraightValue) (JoinFn betaReduce forward))

(rule $ShareWith (share with doctor) (ConstantFn tt:root.command.share))
(rule $ShareWithSomeone (share with $StringValue) (lambda x (tt:root.command.share (var x))))

(rule $ValueQuestion (what) (ConstantFn tt:root.command.ask))
(rule $TimeQuestion (when did i measure) (ConstantFn tt:root.command.askwhen))
(rule $TimeQuestion (when did i last measure) (ConstantFn tt:root.command.askwhen))
(rule $Question ($ValueQuestion) (IdentityFn))
(rule $Question ($TimeQuestion) (IdentityFn))
(rule $Question ($ValueQuestion is) (SelectFn 0))
(rule $Question ($ValueQuestion was) (SelectFn 0))
(rule $Question ($ValueQuestion are) (SelectFn 0))
(rule $AskSomething ($AskSomethingOld on $Date) (JoinFn forward))
(rule $AskSomething ($AskSomethingOld $Date) (JoinFn forward))
(rule $AskSomething ($Question $RecordType) (JoinFn forward))

(rule $AskSomethingOldOp (on) (ConstantFn (lambda x (lambda y ((tt:root.command.ask (var x)) (var y)))) (-> tt:type.recordtype (-> fb:type.any tt:type.root.command))))
(rule $AskSomethingOldQuestion ($Question $RecordType) (SelectFn 1))
(rule $AskSomethingOldLeft ($AskSomethingOldQuestion $AskSomethingOldOp) (JoinFn betaReduce backward))
(rule $AskSomethingOld ($AskSomethingOldLeft $Date) (JoinFn betaReduce forward))

(rule $Unit ($LEMMA_TOKEN) (SimpleLexiconFn (type (-> fb:type.number tt:type.measure))))
(rule $Number ($PHRASE) (NumberFn))
(rule $Measure ($Number $Unit) (JoinFn backward))
(rule $Date ($PHRASE) (TimeFn))
(rule $Date ($PHRASE) (DateFn))
(rule $StringValue ($PHRASE) (IdentityFn) (anchored 1))
(rule $Gender ($Other) (IdentityFn))
(rule $Gender ($PHRASE) (SimpleLexiconFn (type tt:type.gender)))

(rule $StraightValue ($Date) (IdentityFn))
(rule $StraightValue ($Number) (IdentityFn))
(rule $StraightValue ($Measure) (IdentityFn))
(rule $StraightValue ($Gender) (IdentityFn))
(rule $StraightValue ($StringValue) (IdentityFn))

(rule $Special ($PHRASE) (SimpleLexiconFn (type tt:type.special)))

(rule $ROOT ($InsertSomething) (IdentityFn))
(rule $ROOT ($InsertValue) (IdentityFn))
(rule $ROOT ($AskSomething) (IdentityFn))
(rule $ROOT ($AskSomething ?) (IdentityFn))
(rule $ROOT ($AskSomethingOld) (IdentityFn))
(rule $ROOT ($AskSomethingOld ?) (IdentityFn))
(rule $ROOT ($StraightValue) (lambda x (tt:root.token.value (var x))))
(rule $ROOT ($Special) (IdentityFn))
(rule $ROOT ($ShareWith) (IdentityFn))
(rule $ROOT ($ShareWithSomeone) (IdentityFn))
